generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id       String     @id @default(uuid())
  username String
  email    String     @unique
  password String
  
  Sessions Sessions[]
  Projects Projects[]

  @@map("users")
}

model Sessions {
  id           String   @id @default(uuid())
  userId       String
  refreshToken String   @map("refresh_token") @unique
  createdAt    DateTime @default(now()) @map("created_at")
  expiresAt    DateTime @map("expires_at")
  isValid      Boolean  @default(true)

  user         Users    @relation(fields: [userId], references: [id])

  @@index([refreshToken])
}

model Projects {
  id          String  @id @default(uuid())
  name        String
  description String

  userId      String?
  Users       Users?  @relation(fields: [userId], references: [id])
  tasks       Tasks[]

  @@map("projects")
}

model Tasks {
  id          String    @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @map("updated_at")
  isCompleted Boolean   @default(false) @map("is_complete")
  
  parentId    String?   @map("parent_id")
  projectId String?

  ParentTask  Tasks?    @relation("SubTasks", fields: [parentId], references: [id], onDelete: Cascade)
  SubTasks    Tasks[]   @relation("SubTasks")
  projects    Projects? @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("task")
}
